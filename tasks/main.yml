---
- name: Install essential packages and set OS specific variables
  ansible.builtin.include_tasks: "{{ ansible_os_family | lower }}.yml"

- name: Load OS specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family | lower }}.yml"

- name: Install MongoDB dependencies
  ansible.builtin.package:
    name: "{{ mongodb_dep_pkg }}"
    state: present
  loop: "{{ mongodb_dependencies }}"
  loop_control:
    loop_var: mongodb_dep_pkg
  register: package_status
  until: package_status is success
  delay: 10
  retries: 6

- name: Verify that required string variables are defined
  ansible.builtin.assert:
    that: "{{ req_var }} is defined and {{ req_var }} | length > 0 and {{ req_var }} != None"
    fail_msg: "{{ req_var }} needs to be set for the role to work"
    success_msg: "{{ req_var }} is defined"
  loop:
    - mongodb_version
    - mongodb_os_distro
  loop_control:
    loop_var: req_var

- name: Check for mongod daemon
  ansible.builtin.stat:
    path: "{{ mongodb_path_exec }}/mongod"
  register: mongodb_local_binary

- name: Install MongoDB via package manager
  ansible.builtin.include_tasks: "{{ ansible_os_family | lower }}-pkg-install.yml"
  when:
    - mongodb_pkg_install
    - not mongodb_local_binary.stat.exists

- name: Install MongoDB via tarball
  ansible.builtin.include_tasks: "tarball-install.yml"
  when:
    - not mongodb_pkg_install
    - not mongodb_local_binary.stat.exists
